devtools::install_github("jcofferen/readytableone", build_vignettes = TRUE)
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
library(tidyverse); library(kableExtra)
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
## variable for stratification
strat <- "vs"
strat_cols <- nlevels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
## nonparametric center and spread for continuous variables
medians <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, median)
ranges <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, c(min, max))
iqrs <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, IQR)
## create numeric summary table
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
tbl_names <- numeric(ncol(res_num))
for(i in 1:ncol(res_num)){
ifelse(i == 1,
tbl_names[i] <- "",
tbl_names[i] <- paste0(strat_levels[i-1], " (n = ", ns[i-1, 2], ")"))
}
colnames(res_num) <- tbl_names
## name variables and center (spread)
j <- 2
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
k <- 1
for(b in 1:strat_cols){
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, k+1] <- paste0(signif(means[k, j], 3), " (", signif(sds[k, j], 3), ")"),
res_num[i, k+1] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- k +1
}
res_num %>% kbl() %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
nums
colnames(means)[-1]
nums <- colnames(means)[-1]
nums
facts <- df %>% select(-nums)
facts
facts <- df %>% select(-all_of(nums))
facts
nums
prop.table(facts)
prop.table(facts$vs)
prop.table(table(facts$vs))
ncol(facts)
prop.table(table(facts[,1]))
prop.table(table(facts[,2]))
prop.table(table(facts[,3]))
prop.table(table(facts[,4]))
props <- numeric(ncol(facts))
props <- numeric(ncol(facts))
props
length(props)
props <- list(ncol(facts))
props
for(i in 1:ncol(facts))){
props[i]<- prop.table(table(facts[,i]))
}
for(i in 1:ncol(facts)){
props[i]<- prop.table(table(facts[,i]))
}
facts
props
prop.table(table(facts[,1]))
prop.table(table(facts[,2]))
props <- list(ncol(facts))
for(i in 1:ncol(facts)){
props[[i]]<- prop.table(table(facts[,i]))
}
props
summarise(facts)
summary(facts)
res_num %>% kbl(align = "c") %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
ncol(res_num)-1
rep("c", ncol(res_num)-1
)
c("l", rep("c", ncol(res_num)-1)
)
res_num %>% kbl(align = c("l", rep("c", ncol(res_num)-1))) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
df
## variable for stratification
strat <- "gear"
strat_cols <- nlevels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
nums <- colnames(means)[-1]
## nonparametric center and spread for continuous variables
medians <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, median)
ranges <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, c(min, max))
iqrs <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, IQR)
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
tbl_names <- numeric(ncol(res_num))
for(i in 1:ncol(res_num)){
ifelse(i == 1,
tbl_names[i] <- "",
tbl_names[i] <- paste0(strat_levels[i-1], " (n = ", ns[i-1, 2], ")"))
}
colnames(res_num) <- tbl_names
## name variables and center (spread)
j <- 2
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- 1
for(b in 1:strat_cols){
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, k+1] <- paste0(signif(means[k, j], 3), " (", signif(sds[k, j], 3), ")"),
res_num[i, k+1] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- k +1
}
res_num %>% kbl(align = c("l", rep("c", ncol(res_num)-1))) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
colnames(df) <- c("MilesPerGallon",
"NumberOfCylinders",
"DisplacementCubicInches",
"Horsepower",
"RearAxelRatio",
"WeightThousandsLbs",
"QuarterMileTimeSeconds",
"EngineShape",
"Transmission",
"Gears",
"Carburetors")
strat <- "Gears"
strat_cols <- nlevels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
nums <- colnames(means)[-1]
## nonparametric center and spread for continuous variables
medians <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, median)
ranges <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, c(min, max))
iqrs <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, IQR)
## create numeric summary table
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
tbl_names <- numeric(ncol(res_num))
for(i in 1:ncol(res_num)){
ifelse(i == 1,
tbl_names[i] <- "",
tbl_names[i] <- paste0(strat_levels[i-1], " (n = ", ns[i-1, 2], ")"))
}
colnames(res_num) <- tbl_names
## name variables and center (spread)
j <- 2
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
k <- 1
for(b in 1:strat_cols){
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, k+1] <- paste0(signif(means[k, j], 3), " (", signif(sds[k, j], 3), ")"),
res_num[i, k+1] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- k +1
}
res_num %>% kbl(align = c("l", rep("c", ncol(res_num)-1))) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
devtools::document()
remove.packages("readytableone")
