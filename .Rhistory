res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(round(means[1, j], 1), " (", round(sds[1, j], 1), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(c(2, 4, 6, 8, 10, 12)) %>% kable_classic(full_width = FALSE)
res_num
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = 3)
colnames(res_num) <- c("",
paste0(levels(df$vs)[1], " (n = ", "n", ")"),
paste0(levels(df$vs)[2], " (n = ", "n", ")"))
levels(df$vs)[1]
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(round(means[1, j], 1), " (", round(sds[1, j], 1), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(round(means[2, j], 1), " (", round(sds[2, j], 1), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(c(2, 4, 6, 8, 10, 12)) %>% kable_classic(full_width = FALSE)
library(datasets)
seq(2, nrow(res_num), 2)
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
## variable for stratification
strat <- vm
strat
## variable for stratification
strat <- "vm"
strat
## parametric center and spread for continuous variables
means <- df %>% group_by(strat) %>% summarise_if(is.numeric, mean)
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
strat
## parametric center and spread for continuous variables
means <- df %>% group_by(across(strat)) %>% summarise_if(is.numeric, mean)
## variable for stratification
strat <- `vm`
## variable for stratification
strat <- "vs"
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
means
rm(list = ls())
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = as.factor(vs),
am = as.factor(am),
gear = as.factor(gear),
carb = as.factor(carb))
## variable for stratification
strat <- "vs"
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
nums_labels <- c("Miles Per Gallon",
"Cylinders",
"Displacement",
"Horsepower",
"Ratio",
"Weight",
"Seconds")
means <- data.frame(means[-1])
sds <- data.frame(sds[-1])
colnames(means) <- nums_labels
## nonparametric center and spread for continuous variables
medians <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, median)
ranges <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, c(min, max))
iqrs <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, IQR)
## create numeric summary table
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = nlevels())
colnames(res_num) <- c("",
paste0(levels(df$vs)[1], " (n = ", "n", ")"),
paste0(levels(df$vs)[2], " (n = ", "n", ")"))
levels(df$vs)[1]
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(round(means[1, j], 1), " (", round(sds[1, j], 1), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(round(means[2, j], 1), " (", round(sds[2, j], 1), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = nlevels(strat))
colnames(res_num) <- c("",
paste0(levels(df$vs)[1], " (n = ", "n", ")"),
paste0(levels(df$vs)[2], " (n = ", "n", ")"))
levels(df$vs)[1]
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(round(means[1, j], 1), " (", round(sds[1, j], 1), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(round(means[2, j], 1), " (", round(sds[2, j], 1), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
eval(strat)
df$eval(strat)
df["vs"]
nlevels(df["vs"])
nlevels(df$vs)
nlevels(df$strat)
nlevels(df$as.name(strat))
as.name(strat)
nlevels(df["vs"])
df["vs"]
nlevels(df[,"vs"])
strat_cols <- nlevels(df[,"vs"])
strat_cols
str(strat_cols)
strat_cols <- nlevels(df[,as.name(strat)])
nlevels(df[,as.name(strat)])
as.name(strat)
eval(as.name(strat))
df[,eval(as.name(strat))]
strat_cols <- nlevels(df[,eval(strat)])
strat_cols
nlevels(df[,eval(strat)])
str(strat_cols)
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols)
levels(df$eval(strat))[1]
levels(df[,eval(strat)])[1]
df[,eval(strat)]
levels(df[,eval(strat)])
levels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
strat_levels
strat_levels[1]
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols)
colnames(res_num) <- c("",
paste0(strat_levels[1], " (n = ", "n", ")"),
paste0(strat_levels[2], " (n = ", "n", ")"))
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(round(means[1, j], 1), " (", round(sds[1, j], 1), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(round(means[2, j], 1), " (", round(sds[2, j], 1), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
c("",
paste0(strat_levels[1], " (n = ", "n", ")"),
paste0(strat_levels[2], " (n = ", "n", ")"))
res_num
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
res_num
colnames(res_num) <- c("",
paste0(strat_levels[1], " (n = ", "n", ")"),
paste0(strat_levels[2], " (n = ", "n", ")"))
res_num
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
colnames(res_num) <- c("",
paste0(strat_levels[1], " (n = ", "n", ")"),
paste0(strat_levels[2], " (n = ", "n", ")"))
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(round(means[1, j], 1), " (", round(sds[1, j], 1), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(round(means[2, j], 1), " (", round(sds[2, j], 1), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
ns
colnames(res_num) <- c("",
paste0(strat_levels[1], " (n = ", ns[1], ")"),
paste0(strat_levels[2], " (n = ", ns[2], ")"))
res_num
ns[1]
ns[2]
ns
colnames(res_num) <- c("",
paste0(strat_levels[1], " (n = ", ns[1, 2], ")"),
paste0(strat_levels[2], " (n = ", ns[2, 2], ")"))
res_num
strat_labels <- c("Not V-shaped", "V-shaped")
colnames(res_num) <- c("",
paste0(strat_labels[1], " (n = ", ns[1, 2], ")"),
paste0(strat_labels[2], " (n = ", ns[2, 2], ")"))
res_num
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(signif(means[2, j], 3), " (", signif(sds[2, j], 3), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
signif(means[2, 2], 3)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(signif(means[2, j], 3), " (", signif(sds[2, j], 3), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
colnames(res_num) <- c("",
paste0(strat_labels[1], " (n = ", ns[1, 2], ")"),
paste0(strat_labels[2], " (n = ", ns[2, 2], ")"))
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(signif(means[1, j], 3), " (", signif(sds[1, j], 3), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(signif(means[2, j], 3), " (", signif(sds[2, j], 3), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
summary(mtcars)
summary(df)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
labels(df$mpg) <- "Miles Per Gallon"
colnames(df) <- c("Miles Per Gallon",
"Number of Cylinders",
"Displacement (cu. in.)",
"Horsepower",
"Rear Axel Ratio",
"Weight (thousands lbs)",
"Quarter Mile Time (seconds)",
"Enginge Shape",
"Transmission",
"Numer of Gears",
"Numer of Carburetors")
rm(list = ls())
## test data
data(mtcars)
df
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
colnames(df) <- c("Miles Per Gallon",
"Number of Cylinders",
"Displacement (cu. in.)",
"Horsepower",
"Rear Axel Ratio",
"Weight (thousands lbs)",
"Quarter Mile Time (seconds)",
"Enginge Shape",
"Transmission",
"Numer of Gears",
"Numer of Carburetors")
## variable for stratification
strat <- "vs"
strat_cols <- nlevels(df[,eval(strat)])
## variable for stratification
strat <- "Engine Shape"
strat_cols <- nlevels(df[,eval(strat)])
eval(strat)
df[,eval(strat)]
## variable for stratification
strat <- `Engine Shape`
## variable for stratification
strat <- "Engine Shape"
strat_cols <- nlevels(df[,as.name(strat)])
as.name(strat)
colnames(df)
colnames(df) <- c("Miles Per Gallon",
"Number of Cylinders",
"Displacement (cu. in.)",
"Horsepower",
"Rear Axel Ratio",
"Weight (thousands lbs)",
"Quarter Mile Time (seconds)",
"Engine Shape",
"Transmission",
"Numer of Gears",
"Numer of Carburetors")
## variable for stratification
strat <- "Engine Shape"
strat_cols <- nlevels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
strat_labels <- c("Not V-shaped", "V-shaped")
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
means <- data.frame(means[-1])
sds <- data.frame(sds[-1])
means
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
colnames(res_num) <- c("",
paste0(strat_labels[1], " (n = ", ns[1, 2], ")"),
paste0(strat_labels[2], " (n = ", ns[2, 2], ")"))
## name variables and center (spread)
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 2] <- paste0(signif(means[1, j], 3), " (", signif(sds[1, j], 3), ")"),
res_num[i, 2] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 3] <- paste0(signif(means[2, j], 3), " (", signif(sds[2, j], 3), ")"),
res_num[i, 3] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
strat_labels <- c("V-shaped", "Straight")
colnames(res_num) <- c("",
paste0(strat_labels[1], " (n = ", ns[1, 2], ")"),
paste0(strat_labels[2], " (n = ", ns[2, 2], ")"))
res_num %>% kbl(align = c("l", "c", "c")) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
remove.packages("readytableone")
devtools::install_github("jcofferen/readytableone")
library(readytableone)
rto(df)
rto(df, strata = vm)
rto(df, y = vm)
rto(df, strata = y)
rto(df)
rto(df, strata = "vm")
rto(df, stratify = "vm")
rto(df, stratify = y)
remove.packages("readytableone")
