remove.packages('rlang')
install.packages('rlang')
install.packages('tidyr')
install.packages(c("ggpmisc", "ggpubr", "mcr"))
install.packages('pwr')
library(pwr)
pwr.t.test(50, d=NULL, sig.level = .9, type='paired')
pwr.t.test(50, d=NULL, sig.level = .9, type=c('paired'))
pwr.t.test(n=50, d=NULL, sig.level = 0.05, power=0.90, type=c('paired'))
log(0.05)/log(0.75)
(.25*.75)/(.15/1.96)^2
0.4 + 1.96*sqrt(3/250)
0.4 - 1.96*sqrt(3/250)
1.96*sqrt(3/250)
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
install.packages(devtools)
install.packages("devtools")
remove.packages("readytableone")
devtools::install_github("jcofferen/readytableone")
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
library(tidyverse); library(kableExtra)
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
rto(df, stratify = vs)
library(readytableone)
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
rto(df, stratify = vs)
rto(df, stratify = "vs")
colnames(df) <- c("Miles Per Gallon",
"Number of Cylinders",
"Displacement (cu. in.)",
"Horsepower",
"Rear Axel Ratio",
"Weight (thousands lbs)",
"Quarter Mile Time (seconds)",
"Engine Shape",
"Transmission",
"Numer of Gears",
"Numer of Carburetors")
rto(df, stratify = "vs")
rto(df, stratify = "Engine Shape")
rto(df, stratify = "Gear")
rto(df, stratify = "Transmission")
rto(df, stratify = "Number of Gears")
rto(df, stratify = "Number of Carburetors")
library(readytableone)
devtools::install_github("jcofferen/readytableone")
library(readytableone)
?rto
?df
remove.packages("readytableone")
devtools::install_github("jcofferen/readytableone", build_vignettes = TRUE)
library(readytableone)
rto(df, stratify = "Transmission")
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
colnames(df) <- c("MilesPerGallon",
"NumberOfCylinders",
"DisplacementCubicInches",
"Horsepower",
"RearAxelRatio",
"WeightThousandsLbs",
"QuarterMileTimeSeconds",
"EngineShape",
"Transmission",
"Gears",
"Carburetors")
rto(df, stratify = "Transmission")
rto(df, stratify = "Gear")
rto(df, stratify = "Gears")
rto(df, stratify = "Carburetors")
devtools::install_github("jcofferen/readytableone", build_vignettes = TRUE)
rto <- function (x, stratify, nonpara = FALSE){
test <- NULL
ifelse(is.data.frame(x),
test <- "OK",
test <- "Fail")
## assign the dataframe
df <- x
## variable for stratification
strat <- "Gears"
strat_cols <- nlevels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
nums <- colnames(means)[-1]
## nonparametric center and spread for continuous variables
medians <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, median)
ranges <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, c(min, max))
iqrs <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, IQR)
## create numeric summary table
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
tbl_names <- numeric(ncol(res_num))
for(i in 1:ncol(res_num)){
ifelse(i == 1,
tbl_names[i] <- "",
tbl_names[i] <- paste0(strat_levels[i-1], " (n = ", ns[i-1, 2], ")"))
}
colnames(res_num) <- tbl_names
## name variables and center (spread)
j <- 2
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
## add values
j <- 1
k <- 1
for(b in 1:strat_cols){
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, k+1] <- paste0(signif(means[k, j], 3), " (", signif(sds[k, j], 3), ")"),
res_num[i, k+1] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- k +1
}
res_num %>% kbl(align = c("l", rep("c", ncol(res_num)-1))) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
facts <- df %>% select(-all_of(nums))
factsum <- df %>% group_by_at(strat) %>% summarise()
props <- list(ncol(facts))
length(props)
for(i in 1:ncol(facts)){
props[[i]]<- prop.table(table(facts[,i]))
}
prop.table(table(facts[,2]))
}
## test data
data(mtcars)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
library(tidyverse); library(kableExtra)
## new data frame containing numeric and factors
df <- mtcars %>% mutate(vs = factor(vs,
levels = c(0, 1),
labels = c("V-Shaped", "Straight")),
am = factor(am,
levels = c(0, 1),
labels = c("Automatic", "Manual")),
gear = factor(gear,
levels = c(3, 4, 5),
labels = c("3", "4", "5")),
carb = factor(carb,
levels = c(1, 2, 3, 4, 6, 8),
labels = c("1", "2", "3", "4", "6", "8")))
rto(df, stratify = "carb")
## variable for stratification
strat <- "carb"
strat_cols <- nlevels(df[,eval(strat)])
strat_levels <- levels(df[,eval(strat)])
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
sds <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, sd)
ns <- df %>% group_by_at(strat) %>% summarise(n = n())
nums <- colnames(means)[-1]
## nonparametric center and spread for continuous variables
medians <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, median)
ranges <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, c(min, max))
iqrs <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, IQR)
res_num <- matrix(NA, nrow = 2*(ncol(means)-1), ncol = strat_cols+1)
tbl_names <- numeric(ncol(res_num))
for(i in 1:ncol(res_num)){
ifelse(i == 1,
tbl_names[i] <- "",
tbl_names[i] <- paste0(strat_levels[i-1], " (n = ", ns[i-1, 2], ")"))
}
colnames(res_num) <- tbl_names
## name variables and center (spread)
j <- 2
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, 1] <- "Mean (SD)",
res_num[i, 1] <- colnames(means[j]))
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- 1
for(b in 1:strat_cols){
for(i in 1:nrow(res_num)){
ifelse(i %% 2 == 0,
res_num[i, k+1] <- paste0(signif(means[k, j], 3), " (", signif(sds[k, j], 3), ")"),
res_num[i, k+1] <- "")
ifelse(i %% 2 != 0,
j <- j + 1,
j <- j)
}
j <- 1
k <- k +1
}
res_num %>% kbl(align = c("l", rep("c", ncol(res_num)-1))) %>%  add_indent(seq(2, nrow(res_num), 2)) %>% kable_classic(full_width = FALSE)
facts <- df %>% select(-all_of(nums))
factsum <- df %>% group_by_at(strat) %>% summarise()
props <- list(ncol(facts))
length(props)
for(i in 1:ncol(facts)){
props[[i]]<- prop.table(table(facts[,i]))
}
prop.table(table(facts[,2]))
rto(df, stratify = "carb")
## variable for stratification
strat <- "carb"
strat_cols <- nlevels(df[,eval(strat)])
strat_cols
strat_levels <- levels(df[,eval(strat)])
strat_levels
## parametric center and spread for continuous variables
means <- df %>% group_by_at(strat) %>% summarise_if(is.numeric, mean)
means
sds
ns
nums
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
rm(rto)
devtools::document()
remove.packages("readytableone")
rm(list = ls())
devtools::install_github("jcofferen/readytableone", build_vignettes = TRUE)
WD2 <- "C:/Users/User1/Desktop/readytableone"
setwd(WD2)
devtools::document()
